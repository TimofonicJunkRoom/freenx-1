#!/bin/bash
#
# nxviewer_helper - Small helper for external vncviewer program as needed by NX 3.0.0 backend.
#
# Copyright (c) 2007 by Fabian Franz <freenx@fabian-franz.de>
#
# License: GPL, v2
#
# SVN: $Id $
#

[ -z "$COMMAND_VNCVIEWER" ] && COMMAND_VNCVIEWER="vncviewer"
[ -z "$COMMAND_VNCPASSWD" ] && COMMAND_VNCPASSWD="$PATH_BIN/nxpasswd"
[ -z "$COMMAND_X11VNC" ] && COMMAND_X11VNC="x11vnc"

mkdir -p "$NXSESSION_DIRECTORY/scripts/"
echo "$agent_password" | $COMMAND_VNCPASSWD "$NXSESSION_DIRECTORY/scripts/.passwd" doit

# Start x11vnc
if [ -n "$shadowdisplay" ]
then
	(
		unset XAUTHORITY

		# We need to set just :0.0 in case of localhost connection.
		[ "$shadowhost" = "127.0.0.1" ] && shadowhost=""
			
		
		# don't use accept popup or viewonly mode  as its the same user
		accept=""
		viewonly=""
		
		# not the same user? So we have a shadow cookie, we add to xauth
		if [ -n "$shadowcookie" ]
		then
			xauth add "$shadowhost:$shadowdisplay" MIT-MAGIC-COOKIE-1 "$shadowcookie"
			if [ "$shadowuser" != "$USER" ]
			then
				[ "$ENABLE_SESSION_SHADOWING_AUTHORIZATION" = "1" ] && accept="-accept popup"
				[ "$ENABLE_INTERACTIVE_SESSION_SHADOWING" != "1" ] && viewonly="-viewonly"
			fi
		fi
		
		DISPLAY="$shadowhost:$shadowdisplay" $COMMAND_X11VNC -localhost $accept $viewonly -timeout 120 -once -rfbauth "$NXSESSION_DIRECTORY/scripts/.passwd" >"$NXSESSION_DIRECTORY/scripts/.vnc_port" &
	)
	sleep 2
	agent_port=$(cat "$NXSESSION_DIRECTORY/scripts/.vnc_port" | egrep "^PORT=" | cut -d'=' -f 2)
	[ -z "agent_port" ] && agent_port="0"
	# note the :: is not a mistake, but rather a hint for 
	# nxviewer to use this as a port and not
	# interpret it as a display.
	agent_server="127.0.0.1::$agent_port"
	rm -f "$NXSESSION_DIRECTORY/scripts/.vnc_port"
fi

# Start the vncviewer

exec $COMMAND_VNCVIEWER -passwd "$NXSESSION_DIRECTORY/scripts/.passwd" -fullscreen $AGENT_EXTRA_OPTIONS_RFB "$agent_server" 
