#!/bin/bash
#
# Ultimate wrapper for nxssh for freenx with optional password from nxclient.
#
# Syntax: 
#
# In nxclient set:
#
#	hostname: [@]hostname, if the @ is set it is wrapped.
#
#	username: [@]user[@U|@S]
#
#		The first @ denotes if password should not be read / used from nxclient. (@ set = use plain ssh)
#
#		The second @U means only try usermode authentication.
#		The second @S means only try suid mode authentication.
#
# Copyright (c) 2005-2008 by Fabian Franz.
#
# License: GPL
#

# VARIABLES:

NXSERVER_SUID="/usr/NX/bin/nxserver-suid"
NXSERVER_USERMODE="~/NX4U/bin/nxserver-usermode"

# Enable to always wrap
#NXWRAP=1

# PROGRAM

CONN=$(echo "$@" | sed 's/.*nx@//g' | cut -d" " -f1)

case "$CONN" in @*) NXWRAP=1; CONN=$(echo $CONN | cut -d'@' -f2); esac

if [ "$NXWRAP" = "1" ]
then
	cat <<EOF
NX> 203 NXSSH running with pid: $$
NX> 200 Connected to address: 127.0.0.1 on port: 22
NX> 202 Authenticating user: nx
NX> 208 Using auth method: publickey
EOF
	
	echo "HELLO NXSERVER - Version 3.2.0 OS (GPL Edition)"	

	# Login stage
	while true
	do
		echo -n "NX> 105 "
		read CMD
		# FIXME?
		[ "$CMD" = "" ] && CMD="quit"
		echo "$CMD"
		
		case "$CMD" in 
			quit|QUIT)
				echo "Quit"
				echo "NX> 999 Bye"
				exit 0
			;;
			exit|EXIT)
				echo "Exit"
				echo "NX> 999 Bye"
				exit 0
			;;
			bye|BYE)
				echo "Bye"
				echo "NX> 999 Bye"
				exit 0
			;;
			hello*|HELLO*)
				PROTO=$(echo $CMD | sed 's/.*Version \(.*\)/\1/g')
				echo "NX> 134 Accepted protocol: $PROTO"
			;;
			"set auth_mode*"|"SET AUTH_MODE*")
				if [ "$CMD" = "set auth_mode password" -o "$CMD" = "SET AUTH_MODE PASSWORD" ]
				then
					echo "Set auth_mode: password"
				else
					echo "NX> 500 ERROR: unknown auth mode ''"
				fi
			;;
			login|LOGIN)
				LOGIN_SUCCESS="0"
				
				echo -n "NX> 101 User: "
				read USER2
				echo $USER2

				echo -n "NX> 102 Password: "
				break
			;;
		esac
	done
	
	#
	# Check which mode to use: PW or normal ssh
	#
	# Syntax: [@]user

	# Use password for authentication
	PWMODE="1"

	case "$USER2" in 
		"@"*)
			# do not use password for authentication
			PWMODE=0
			USER2=$(echo $USER2 | cut -d'@' -f2,3)
			
			# So read it out from client
			read -s PASS
			unset PASS
		;;
	esac

	#
	# Check which method (suid or usermode) to use on server
	#
	# Syntax: user@U or user@S or user
	# 
	
	case "$USER2" in 
		*"@"*)
			MODE=$(echo $USER2 | cut -d'@' -f2)
			[ "$MODE" = "U" ] && NXSERVER_SUID=/bin/false
			[ "$MODE" = "S" ] && NXSERVER_USERMODE=/bin/falsedoesnotexist
			USER2=$(echo $USER2 | cut -d'@' -f1)
		;;
	esac
	
	export REMOTE_COMMAND='if [ -x '"$NXSERVER_SUID"' -a -u '"$NXSERVER_SUID"' ]; then unset SSH_CLIENT SSH_CLIENT2; export SSH_CLIENT="127.0.0.1 56404 127.0.0.1 22"; '$NXSERVER_SUID'; elif [ -x '"$NXSERVER_USERMODE"' ]; then '"$NXSERVER_USERMODE"'; else echo "NX> 596 Service not available."; echo "NX> 999 Bye"; fi'

	if [ "$PWMODE" != "1" ]
	then 
		$(dirname $0)/nxssh.orig -nxstdinpass "$USER2@$CONN" -x -2 -B -o "NumberOfPasswordPrompts 1" sh -c "'$REMOTE_COMMAND'" 
	else
		export SSH_ASKPASS=/usr/bin/ssh-askpass

		$(dirname $0)/nxssh.orig "$USER2@$CONN" -x -2 -B sh -c "'$REMOTE_COMMAND'"
	fi

	if [ $? -ne 0 ]
	then
		echo "NX> 404 ERROR: wrong password or login."
        	echo "NX> 999 Bye"
	        exit 1
	fi

else # do not wrap it
	exec $(dirname $0)/nxssh.orig "$@"
fi
